//Brute Force

class Solution {
    public Node copyRandomList(Node head) {
        if(head==null) return null;
        Node t1 = head;
        Node newHead = new Node(t1.val);
        Node t2 = newHead;
        t1=t1.next;
        HashMap<Node, Node> hm = new HashMap<>();
        hm.put(head, newHead);
        while(t1!=null){
            Node newNode = new Node(t1.val);
            t2.next = newNode;
            t2 = newNode;
            hm.put(t1, t2);
            t1 = t1.next;
        }
        t1 = head;
        t2 = newHead;
        while(t1!=null){
            if(t1.random!=null) t2.random = hm.get(t1.random);
            t1 = t1.next;
            t2 = t2.next;
        }
        return newHead;
    }
}

\\Optimal, without using HashMap

class Solution {
    public Node copyRandomList(Node head) {
        Node temp = head;
        while(temp!=null){
            Node newNode = new Node(temp.val);
            newNode.next = temp.next;
            temp.next = newNode;
            temp = newNode.next;
        }
        temp = head;
        while(temp!=null){
            if(temp.random!=null){
                temp.next.random = temp.random.next;
            }
            temp = temp.next.next;
        }
        temp = head;
        Node dummyNode = new Node(-1);
        Node res = dummyNode;
        while(temp!=null){
            res.next = temp.next;
            res = res.next;
            temp.next = temp.next.next;
            temp = temp.next;
        }
        return dummyNode.next;
    }
}
