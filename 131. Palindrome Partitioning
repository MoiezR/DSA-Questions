class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        backtrack(s, 0, new ArrayList<>(), result);
        return result;
    }
    public void backtrack(String s, int index, List<String> ds, List<List<String>> result){
        if(index==s.length()){
            result.add(new ArrayList<>(ds));
            return;
        }
        for(int i=index; i<s.length(); i++){
            if(ispal(s, index, i)==true){
                ds.add(s.substring(index, i+1));
                backtrack(s, i+1, ds, result);
                ds.remove(ds.size()-1);
            }
        }
    }
    public boolean ispal(String s, int start, int end){
        while(start<=end){
            if(s.charAt(start)!=s.charAt(end)) return false;
            start++;
            end--;
        }
        return true;
    }
}
