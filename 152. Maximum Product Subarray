class Solution {
    public int maxProduct(int[] nums) {
        int curr=1, max= Integer.MIN_VALUE;

        for(int i=0 ; i<nums.length; i++){
            if(nums[i]!=0){
            curr*=nums[i];
            if(curr>max) max=curr;}
        else{
            if(0>curr) curr=0;
            if(curr>max) max=curr;
        }
    }
        return max;
    }
}

//Brute force solution

class Solution {
    public int maxProduct(int[] nums) {
        int min=nums[0], max=nums[0], ans=nums[0];

        for(int i=1; i<nums.length; i++){
            int temp = max;
            max = Math.max(Math.max(nums[i]*min, nums[i]*max), nums[i]);
            min = Math.min(Math.min(nums[i]*min, nums[i]*temp), nums[i]);
            if(max>ans) ans=max;
        }
        return ans;
    }
}

//Suboptimal solution
