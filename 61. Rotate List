/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null) return head;
        int count=0;
        ListNode temp = head;
        while(temp!=null){
            temp = temp.next;
            count++;
        }
        k%=count;
        while(k!=0){
            head = rotate(head);
            k--;
        }
        return head;
    }
    public ListNode rotate(ListNode head){
        if(head==null || head.next==null) return head;
        ListNode temp = head;
        while(temp.next.next!=null){
            temp = temp.next;
        }
        ListNode newHead = temp.next;
        temp.next = null;
        newHead.next = head;

        return newHead;
    }
}
