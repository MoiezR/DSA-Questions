class Solution {
    public int maxSubArray(int[] nums) {
        int max=nums[0],  ans=nums[0];
        for(int i=1; i<nums.length; i++){
            max = Math.max(nums[i]+max, nums[i]);
            if(max>ans) ans=max;
        }
        return ans;
    }
}

//Optimal

class Solution {
    public int maxSubArray(int[] nums) {
        int n = nums.length;
        int max = Integer.MIN_VALUE, sum=0;
        for(int i=0; i<n ;i++){
            sum+=nums[i];
            if(sum>max) max = sum;
            if(sum<0) sum=0;
        }
        return max;
    }
}

//Kadane's Algorithm
