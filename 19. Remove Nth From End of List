//Brute Force Solution

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head;
        int count = 0;
        while(curr!=null){
            count++;
            curr = curr.next;
        }
        if(count==n){
            ListNode newHead = head.next;
            return newHead;
        }
        int res = count-n;
        curr = head;
        while(curr!=null){
            res--;
            if(res==0) break;
            curr = curr.next;
        }
        curr.next = curr.next.next;

        return head;
    }
}

//Optimal

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode fast = head;
        for(int i=0; i<n; i++){
            fast=fast.next;
        }
        if(fast==null){
            ListNode newHead = head.next;
            return newHead;
        }
        ListNode slow = head;
        while(fast.next!=null){
            slow = slow.next;
            fast = fast.next;
        }
        slow.next = slow.next.next;
        return head;
    }
}
