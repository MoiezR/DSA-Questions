class Solution {
    public int[] searchRange(int[] nums, int target) {
        int n = nums.length;
        return new int[]{firstOccurence(nums, n, target), lastOccurence(nums, n, target)};

    }
    public int firstOccurence(int[] nums, int n, int target){
        int low=0, high=n-1;
        int first=-1;
        while(low<=high){
            int mid = (low+high)/2;
            if(nums[mid]==target){
                first=mid;
                high=mid-1;
            }
            else if(nums[mid]>target) high=mid-1;
            else low=mid+1;
        }
        return first;
    }
    public int lastOccurence(int[] nums, int n, int target){
        int low=0, high=n-1;
        int last=-1;
        while(low<=high){
            int mid = (low+high)/2;
            if(nums[mid]==target){
                last = mid;
                low=mid+1;
            }
            else if(nums[mid]>target) high = mid-1;
            else low=mid+1;
        }
        return last;
    }
}

//Using Binary Search
