//Optimal

class Solution {
    public void setZeroes(int[][] matrix) {
        int rows = matrix.length;
        int cols = matrix[0].length;
        boolean rowZero = false;
        boolean colZero = false;
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                if(matrix[i][j]==0){
                    if(i==0) rowZero = true;
                    if(j==0) colZero = true;
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        for(int i=1; i<rows; i++){
            for(int j=1; j<cols; j++){
                if(matrix[i][j]!=0){
                    if(matrix[0][j]==0 || matrix[i][0]==0) matrix[i][j]=0;
                }
            }
        }
        if(rowZero){
            for(int j=0; j<cols; j++){
                matrix[0][j]=0;
            }
        }
        if(colZero){
            for(int i=0; i<rows; i++){
                matrix[i][0]=0;
            }
        }
    }
}


//Brute Force

class Solution {
    public void setZeroes(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        for(int i=0; i<n ;i++){
            for(int j=0; j<m ;j++){
                if(matrix[i][j]==0){
                    for(int k=0; k<m ; k++){
                        if(matrix[i][k]!=0) matrix[i][k]=-10;
                    }
                    for(int k=0; k<n ;k++){
                        if(matrix[k][j]!=0) matrix[k][j]=-10;
                    }
                }
            }
        }
        for(int i=0; i<n; i++){
            for(int j=0; j<m ;j++){
                if(matrix[i][j]==-10) matrix[i][j]=0;
            }
        }
    }
}

//Brute Force
