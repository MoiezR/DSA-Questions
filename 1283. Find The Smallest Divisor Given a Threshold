class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        int n = nums.length;
        int max = Integer.MIN_VALUE;
        int lowest = -1;
        for(int i =0; i<n ;i++){
            max = Math.max(max, nums[i]);
        }
        int low=1, high=max;
        while(low<=high){
            int mid = (low+high)/2;
            if(sumOfDivisors(nums, n, mid)<=threshold){
                lowest = mid;
                high=mid-1;
            }
            else low=mid+1;
        }
        return lowest;
    }
    public int sumOfDivisors(int[] nums, int n, int mid){
        double sum=0;
        for(int i=0; i<n; i++){
            sum+= Math.ceil((double)nums[i]/mid);
        }
        return (int)sum;
    }
}

//Using Binary Search
